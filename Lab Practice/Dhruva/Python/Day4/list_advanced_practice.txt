1. Write a Python function to reverse a list at a specific location.


2. Write a Python function find the length of the longest increasing sub-sequence in a list.


3. Write a Python function that finds all the permutations of the members of a list.


4. Write a Python function to find the kth smallest element in a list.


5. Write a Python function to find the kth largest element in a list.


6. Write a Python function to check if a list is a palindrome or not. Return true otherwise false.


7. Write a Python a function to find the union and intersection of two lists.


8. Write a Python function to remove duplicates from a list while preserving the order.


9. Write a Python a function to find the maximum sum sub-sequence in a list. Return the maximum value.


10. Write a Python a function to find the minimum sum sub-sequence in a list. Return the sub-sequence.


11. Write a Python function to find the longest common sub-sequence in two lists.


12. Write a Python program to find the first non-repeated element in a list.


13. Write a Python a function to implement a LRU cache.
From Wikipedia -
Least recently used (LRU)
Discards the least recently used items first. This algorithm requires keeping track of what was used when, which is expensive if one wants to make sure the algorithm always discards the least recently used item. General implementations of this technique require keeping "age bits" for cache-lines and track the "Least Recently Used" cache-line based on age-bits. In such an implementation, every time a cache-line is used, the age of all other cache-lines changes. LRU is actually a family of caching algorithms with members including 2Q by Theodore Johnson and Dennis Shasha, and LRU/K by Pat O'Neil, Betty O'Neil and Gerhard Weikum.


14. Write a Python function to sort a list of dictionaries based on values of a key.


15. Write a Python program to find all the pairs in a list whose sum is equal to a given value.
